name: terraform

on:
  workflow_run:
    workflows:
      - ci
    types:
      - completed
    branches:
      - main
  workflow_dispatch:
 
env:
 TF_VAR_organization_id: ${{ secrets.TF_VAR_organization_id }}
 AWS_ACCESS_KEY_ID: ${{ secrets.SCW_ACCESS_KEY }}
 AWS_SECRET_ACCESS_KEY: ${{ secrets.SCW_SECRET_KEY }}
 SCW_ACCESS_KEY: ${{ secrets.SCW_ACCESS_KEY }}
 SCW_SECRET_KEY: ${{ secrets.SCW_SECRET_KEY }}
 BUCKET_TF_STATE: ${{ secrets.BUCKET_TF_STATE }}
 TF_VAR_project_id: ${{ secrets.TF_VAR_PROJECT_ID }}
 TF_LOG: WARN
 
jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    defaults:
        run:
          working-directory: ./terraform
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download image info
        uses: actions/download-artifact@v4
        with:
          name: image-info
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ github.event.workflow_run.id }}

      - name: Set image tag variable
        run: |
          source ../image_info.txt
          echo "TF_VAR_container_image_tag=${IMAGE_TAG}" >> $GITHUB_ENV

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.11.3

      - name: Initialize Terraform
        run: terraform init -backend-config="bucket=${{ secrets.BUCKET_TF_STATE }}"

      - name: Plan Terraform Changes
        shell: bash
        run: |
          set -o pipefail
          terraform plan | grep -v "Refreshing state\|Reading\|Read complete"

      - name: Apply Terraform Changes
        shell: bash
        run: |
          set -o pipefail
          terraform apply -auto-approve | grep -v "Refreshing state\|Reading\|Read complete"